description: >
  Scan for secrets inside a directory, or Git repository.
  The heavy lifting is done by Gitleaks, for details see https://github.com/gitleaks/gitleaks#gitleaks.

parameters:
  source:
    type: string
    default: '.'
    description: The path to the source for the scanning.
  mode:
    type: enum
    enum: ['dir', 'git']
    default: git
    description: The scan mode describes the source path - directory or Git repository.
  config:
    type: string
    default: ''
    description: >
      The path to the Gitleaks config file. By default, it tries to load "<<parameters.path>>/.gitleaks.toml".
  baseline_report:
    type: string
    default: ''
    description: The path to the baseline report, i.e. issues that can be ignored.
  base_branch:
    type: string
    default: ''
    description: >
      The name of the base branch for this scan. Commonly a long-lived branch, e.g. "main" or "master".
  base_revision:
    type: string
    default: ''
    description: >
      The hash of the last scanned commit from the prior build. Usually, pass CircleCI
      "<<pipeline.git.base_revision>>" pipeline parameter.

steps:
  - run:
      name: Export Gitleaks arguments
      environment:
        PARAM_STR_CONFIG: <<parameters.config>>
        PARAM_STR_BASELINE_REPORT: <<parameters.baseline_report>>
      command: <<include(scripts/export-gitleaks-args.sh)>>
  - when:
      condition:
        equal: [git, <<parameters.mode>>]
      steps:
        - run:
            name: Export Git branches
            environment:
              PARAM_STR_BASE_BRANCH: <<parameters.base_branch>>
            command: <<include(scripts/export-git-branches.sh)>>
        - run:
            name: Detect secrets inside the Git repository
            environment:
              PARAM_STR_SOURCE: <<parameters.source>>
              PARAM_STR_BASE_REVISION: <<parameters.base_revision>>
            command: <<include(scripts/detect-secrets-git.sh)>>
  - when:
      condition:
        equal: [dir, <<parameters.mode>>]
      steps:
        - run:
            name: Detect secrets inside the directory
            environment:
              PARAM_STR_SOURCE: <<parameters.source>>
            command: <<include(scripts/detect-secrets-dir.sh)>>
